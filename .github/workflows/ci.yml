name: CI Pipeline

on:
  pull_request:
    branches: [ main, develop ]
  push:
    branches: [ main, develop ]
  workflow_dispatch:

jobs:
  shellcheck:
    name: ShellCheck Validation
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Run ShellCheck on all shell scripts
        run: |
          echo "Running ShellCheck validation..."
          ./scripts/ci_shellcheck.sh
          echo "‚úÖ ShellCheck validation completed"

  build-validation:
    name: Build Process Validation
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Run build process validation
        run: |
          echo "Running build process validation..."
          ./scripts/ci_build_validation.sh
          echo "‚úÖ Build process validation completed"

  testing-framework:
    name: Testing Framework Validation
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Run testing framework validation
        run: |
          echo "Running testing framework validation..."
          ./scripts/ci_testing_framework.sh
          echo "‚úÖ Testing framework validation completed"

  security-scan:
    name: Security Scanning
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Run security scanning
        run: |
          echo "Running security scanning..."
          ./scripts/ci_security_scan.sh
          echo "‚úÖ Security scanning completed"

  integration-test:
    name: Integration Testing
    runs-on: ubuntu-latest
    needs: [shellcheck, build-validation, testing-framework, security-scan]
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Run integration testing
        run: |
          echo "Running integration testing..."
          ./scripts/ci_integration_test.sh
          echo "‚úÖ Integration testing completed"

  documentation-check:
    name: Documentation Validation
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Run documentation validation
        run: |
          echo "Running documentation validation..."
          ./scripts/ci_documentation_check.sh
          echo "‚úÖ Documentation validation completed"

  summary:
    name: Pipeline Summary
    runs-on: ubuntu-latest
    needs: [shellcheck, build-validation, testing-framework, security-scan, integration-test, documentation-check]
    if: always()
    
    steps:
      - name: Pipeline Summary
        run: |
          echo "## CI Pipeline Summary"
          echo "====================="
          echo "‚úÖ ShellCheck validation: ${{ needs.shellcheck.result }}"
          echo "‚úÖ Build process validation: ${{ needs.build-validation.result }}"
          echo "‚úÖ Testing framework validation: ${{ needs.testing-framework.result }}"
          echo "‚úÖ Security scanning: ${{ needs.security-scan.result }}"
          echo "‚úÖ Integration testing: ${{ needs.integration-test.result }}"
          echo "‚úÖ Documentation validation: ${{ needs.documentation-check.result }}"
          echo ""
          
          # Check if all jobs succeeded
          if [ "${{ needs.shellcheck.result }}" = "success" ] && \
             [ "${{ needs.build-validation.result }}" = "success" ] && \
             [ "${{ needs.testing-framework.result }}" = "success" ] && \
             [ "${{ needs.security-scan.result }}" = "success" ] && \
             [ "${{ needs.integration-test.result }}" = "success" ] && \
             [ "${{ needs.documentation-check.result }}" = "success" ]; then
            echo "üéâ All pipeline checks passed! The project is ready for production."
          else
            echo "‚ùå Some pipeline checks failed. Please review the failed jobs above."
            exit 1
          fi