name: "Copilot Setup Steps"

on:
  workflow_dispatch:
  push:
    paths:
      - .github/workflows/copilot-setup-steps.yml
  pull_request:
    paths:
      - .github/workflows/copilot-setup-steps.yml

jobs:
  copilot-setup-steps:
    runs-on: ubuntu-latest

    permissions:
      contents: read

    env:
      TAVILY_API_KEY: ${{ secrets.TAVILY_API_KEY }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install system dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y \
            make \
            qemu-system \
            xz-utils \
            unzip \
            wget \
            curl \
            git \
            shellcheck \
            cpio \
            gzip \
            rsync \
            jq \
            docker.io

      - name: Install Homebrew for linux
        run: |
          if ! command -v brew > /dev/null 2>&1; then
            echo "Installing Homebrew..."
            /bin/bash -c "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh)"
            eval "$(/home/linuxbrew/.linuxbrew/bin/brew shellenv)"
          else
            echo "Homebrew is already installed"
          fi

      - name: Start Docker service
        run: |
          sudo systemctl start docker
          sudo systemctl enable docker

      - name: Verify installation
        run: |
          make --version
          qemu-system-aarch64 --version
          docker --version
          shellcheck --version
          xz --version
          cpio --version
          jq --version

      - name: Create required directories
        run: |
          mkdir -p images4rpi
          mkdir -p pi5_installer_work
          mkdir -p qemu_test

      - name: Set up shell environment
        run: |
          echo "export PATH=/usr/local/bin:\$PATH" >> ~/.bashrc
          echo "alias ll='ls -la'" >> ~/.bashrc
          echo "/usr/local/bin" >> $GITHUB_PATH

      - name: Test GitHub API access
        run: |
          echo "Testing GitHub API access..."
          response=$(curl -s "https://api.github.com/repos/home-assistant/operating-system/releases/latest")
          echo "API Response length: $(echo "$response" | wc -c)"
          echo "First 500 characters of response:"
          echo "$response" | head -c 500
          echo ""
          if echo "$response" | grep -q "rate limit"; then
            echo "⚠️  Rate limit detected in API response"
            echo "Full response:"
            echo "$response"
          fi
          echo "Testing jq parsing..."
          if echo "$response" | jq -e . > /dev/null 2>&1; then
            echo "✅ Valid JSON response"
            assets_count=$(echo "$response" | jq '.assets | length // 0')
            echo "Assets count: $assets_count"
            if [[ "$assets_count" -gt 0 ]]; then
              echo "Available assets:"
              echo "$response" | jq -r '.assets[].name' | head -5
            fi
          else
            echo "❌ Invalid JSON response"
            echo "Raw response:"
            echo "$response"
          fi
