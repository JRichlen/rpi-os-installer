name: "Copilot Setup Steps"

# Automatically run the setup steps when they are changed to allow for easy validation, and
# allow manual testing through the repository's "Actions" tab
on:
  workflow_dispatch:
  push:
    paths:
      - .github/workflows/copilot-setup-steps.yml
  pull_request:
    paths:
      - .github/workflows/copilot-setup-steps.yml

jobs:
  # The job MUST be called `copilot-setup-steps` or it will not be picked up by Copilot.
  copilot-setup-steps:
    runs-on: macos-latest

    # Set the permissions to the lowest permissions possible needed for your steps.
    # Copilot will be given its own token for its operations.
    permissions:
      # If you want to clone the repository as part of your setup steps, for example to install dependencies, you'll need the `contents: read` permission. If you don't clone the repository in your setup steps, Copilot will do this for you automatically after the steps complete.
      contents: read

    # Set environment variables from secrets
    env:
      TAVILY_API_KEY: ${{ secrets.TAVILY_API_KEY }}

    # You can define any steps you want, and they will run before the agent starts.
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install system dependencies
        run: |
          # Install required packages with Homebrew
          brew install \
            make \
            qemu \
            xz \
            unzip \
            wget \
            curl \
            git \
            shellcheck \
            cpio \
            gzip \
            rsync \
            jq

      - name: Install Docker (for testing containers)
        run: |
          # Docker Desktop is pre-installed on macOS GitHub runners
          # Just verify it's available and start if needed
          if ! docker info > /dev/null 2>&1; then
            echo "Starting Docker Desktop..."
            open -a Docker
            # Wait for Docker to start
            timeout=60
            while ! docker info > /dev/null 2>&1 && [ $timeout -gt 0 ]; do
              echo "Waiting for Docker to start... ($timeout seconds remaining)"
              sleep 5
              timeout=$((timeout - 5))
            done
          fi

      - name: Verify installation
        run: |
          make --version
          qemu-system-aarch64 --version
          docker --version
          shellcheck --version
          xz --version
          # parted --version  # May not be available on macOS
          # diskutil info / | head -5  # macOS disk utility instead

      - name: Create required directories
        run: |
          mkdir -p images4rpi
          mkdir -p pi5_installer_work
          mkdir -p qemu_test

      - name: Set up shell environment
        run: |
          echo "export PATH=/opt/homebrew/bin:\$PATH" >> ~/.zshrc
          echo "alias ll='ls -la'" >> ~/.zshrc
